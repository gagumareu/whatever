name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }}:latest .
          docker tag ${{ secrets.DOCKER_IMAGE_NAME }}:latest ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:latest
          docker push ${{ secrets.DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Verify AWS CLI Version
        run: aws --version

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Verify AWS Authentication
        run: aws sts get-caller-identity

      - name: Package Application for Elastic Beanstalk
        run: |
          zip -r deploy-package.zip Dockerrun.aws.json

      - name: Upload Dockerrun.aws.json to S3 with UUID
        run: |
          UUID=$(uuidgen)
          aws s3 cp Dockerrun.aws.json s3://${{ secrets.AWS_S3_BUCKET }}/${UUID}-Dockerrun.aws.json
          echo "S3_FILE_NAME=${UUID}-Dockerrun.aws.json" >> $GITHUB_ENV

      - name: Create Application Version
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.AWS_EB_APP_NAME }} \
            --version-label "deploy-${{ github.sha }}" \
            --source-bundle S3Bucket="${{ secrets.AWS_S3_BUCKET }}",S3Key="${{ env.S3_FILE_NAME }}"

      - name: Check Application Versions
        run: aws elasticbeanstalk describe-application-versions --application-name ${{ secrets.AWS_EB_APP_NAME }}

      - name: Deploy to Elastic Beanstalk
        run: |
          echo "Updating Elastic Beanstalk environment with new Docker image..."
          aws elasticbeanstalk update-environment \
            --application-name ${{ secrets.AWS_EB_APP_NAME }} \
            --environment-name ${{ secrets.AWS_EB_ENV_NAME }} \
            --version-label "deploy-${{ github.sha }}"

      - name: Verify deployment
        run: aws elasticbeanstalk describe-environments --application-name ${{ secrets.AWS_EB_APP_NAME }}
