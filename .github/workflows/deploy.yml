name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Log in to Docker Hub
        run: echo "${{ DOCKER_HUB_PASSWORD }}" | docker login -u "${{ DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ DOCKER_IMAGE_NAME }}:latest .
          docker tag ${{DOCKER_IMAGE_NAME }}:latest ${{ DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ DOCKER_IMAGE_NAME }}:latest
          docker push ${{ DOCKER_IMAGE_NAME }}:${{ github.sha }}

      - name: Set up AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Deploy to Elastic Beanstalk
        run: |
          aws configure set aws_access_key_id ${{ AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ AWS_REGION }}

          echo "Updating Elastic Beanstalk environment with new Docker image..."
          aws elasticbeanstalk update-environment \
            --application-name ${{ AWS_EB_APP_NAME }} \
            --environment-name ${{ AWS_EB_ENV_NAME }} \
            --version-label "deploy-${{ github.sha }}"

      - name: Verify deployment
        run: |
          aws elasticbeanstalk describe-environments \
            --application-name ${{ AWS_EB_APP_NAME }}
